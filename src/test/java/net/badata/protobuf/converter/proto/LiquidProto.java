// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: converter_includesubclassfields_test.proto

package net.badata.protobuf.converter.proto;

public final class LiquidProto {
  private LiquidProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CoffeeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:net.badata.protobuf.converter.proto.Coffee)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 mlVolume = 1;</code>
     */
    int getMlVolume();

    /**
     * <code>optional float temperature = 2;</code>
     */
    float getTemperature();

    /**
     * <code>optional bool swirling = 3;</code>
     */
    boolean getSwirling();

    /**
     * <code>optional bool clockwise = 4;</code>
     */
    boolean getClockwise();
  }
  /**
   * Protobuf type {@code net.badata.protobuf.converter.proto.Coffee}
   */
  public  static final class Coffee extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:net.badata.protobuf.converter.proto.Coffee)
      CoffeeOrBuilder {
    // Use Coffee.newBuilder() to construct.
    private Coffee(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Coffee() {
      mlVolume_ = 0;
      temperature_ = 0F;
      swirling_ = false;
      clockwise_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Coffee(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              mlVolume_ = input.readInt32();
              break;
            }
            case 21: {

              temperature_ = input.readFloat();
              break;
            }
            case 24: {

              swirling_ = input.readBool();
              break;
            }
            case 32: {

              clockwise_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.badata.protobuf.converter.proto.LiquidProto.internal_static_net_badata_protobuf_converter_proto_Coffee_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.badata.protobuf.converter.proto.LiquidProto.internal_static_net_badata_protobuf_converter_proto_Coffee_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.badata.protobuf.converter.proto.LiquidProto.Coffee.class, net.badata.protobuf.converter.proto.LiquidProto.Coffee.Builder.class);
    }

    public static final int MLVOLUME_FIELD_NUMBER = 1;
    private int mlVolume_;
    /**
     * <code>optional int32 mlVolume = 1;</code>
     */
    public int getMlVolume() {
      return mlVolume_;
    }

    public static final int TEMPERATURE_FIELD_NUMBER = 2;
    private float temperature_;
    /**
     * <code>optional float temperature = 2;</code>
     */
    public float getTemperature() {
      return temperature_;
    }

    public static final int SWIRLING_FIELD_NUMBER = 3;
    private boolean swirling_;
    /**
     * <code>optional bool swirling = 3;</code>
     */
    public boolean getSwirling() {
      return swirling_;
    }

    public static final int CLOCKWISE_FIELD_NUMBER = 4;
    private boolean clockwise_;
    /**
     * <code>optional bool clockwise = 4;</code>
     */
    public boolean getClockwise() {
      return clockwise_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (mlVolume_ != 0) {
        output.writeInt32(1, mlVolume_);
      }
      if (temperature_ != 0F) {
        output.writeFloat(2, temperature_);
      }
      if (swirling_ != false) {
        output.writeBool(3, swirling_);
      }
      if (clockwise_ != false) {
        output.writeBool(4, clockwise_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mlVolume_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mlVolume_);
      }
      if (temperature_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, temperature_);
      }
      if (swirling_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, swirling_);
      }
      if (clockwise_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, clockwise_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.badata.protobuf.converter.proto.LiquidProto.Coffee prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code net.badata.protobuf.converter.proto.Coffee}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:net.badata.protobuf.converter.proto.Coffee)
        net.badata.protobuf.converter.proto.LiquidProto.CoffeeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.badata.protobuf.converter.proto.LiquidProto.internal_static_net_badata_protobuf_converter_proto_Coffee_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.badata.protobuf.converter.proto.LiquidProto.internal_static_net_badata_protobuf_converter_proto_Coffee_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.badata.protobuf.converter.proto.LiquidProto.Coffee.class, net.badata.protobuf.converter.proto.LiquidProto.Coffee.Builder.class);
      }

      // Construct using net.badata.protobuf.converter.proto.LiquidProto.Coffee.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        mlVolume_ = 0;

        temperature_ = 0F;

        swirling_ = false;

        clockwise_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.badata.protobuf.converter.proto.LiquidProto.internal_static_net_badata_protobuf_converter_proto_Coffee_descriptor;
      }

      public net.badata.protobuf.converter.proto.LiquidProto.Coffee getDefaultInstanceForType() {
        return net.badata.protobuf.converter.proto.LiquidProto.Coffee.getDefaultInstance();
      }

      public net.badata.protobuf.converter.proto.LiquidProto.Coffee build() {
        net.badata.protobuf.converter.proto.LiquidProto.Coffee result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public net.badata.protobuf.converter.proto.LiquidProto.Coffee buildPartial() {
        net.badata.protobuf.converter.proto.LiquidProto.Coffee result = new net.badata.protobuf.converter.proto.LiquidProto.Coffee(this);
        result.mlVolume_ = mlVolume_;
        result.temperature_ = temperature_;
        result.swirling_ = swirling_;
        result.clockwise_ = clockwise_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.badata.protobuf.converter.proto.LiquidProto.Coffee) {
          return mergeFrom((net.badata.protobuf.converter.proto.LiquidProto.Coffee)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.badata.protobuf.converter.proto.LiquidProto.Coffee other) {
        if (other == net.badata.protobuf.converter.proto.LiquidProto.Coffee.getDefaultInstance()) return this;
        if (other.getMlVolume() != 0) {
          setMlVolume(other.getMlVolume());
        }
        if (other.getTemperature() != 0F) {
          setTemperature(other.getTemperature());
        }
        if (other.getSwirling() != false) {
          setSwirling(other.getSwirling());
        }
        if (other.getClockwise() != false) {
          setClockwise(other.getClockwise());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.badata.protobuf.converter.proto.LiquidProto.Coffee parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.badata.protobuf.converter.proto.LiquidProto.Coffee) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int mlVolume_ ;
      /**
       * <code>optional int32 mlVolume = 1;</code>
       */
      public int getMlVolume() {
        return mlVolume_;
      }
      /**
       * <code>optional int32 mlVolume = 1;</code>
       */
      public Builder setMlVolume(int value) {
        
        mlVolume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mlVolume = 1;</code>
       */
      public Builder clearMlVolume() {
        
        mlVolume_ = 0;
        onChanged();
        return this;
      }

      private float temperature_ ;
      /**
       * <code>optional float temperature = 2;</code>
       */
      public float getTemperature() {
        return temperature_;
      }
      /**
       * <code>optional float temperature = 2;</code>
       */
      public Builder setTemperature(float value) {
        
        temperature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float temperature = 2;</code>
       */
      public Builder clearTemperature() {
        
        temperature_ = 0F;
        onChanged();
        return this;
      }

      private boolean swirling_ ;
      /**
       * <code>optional bool swirling = 3;</code>
       */
      public boolean getSwirling() {
        return swirling_;
      }
      /**
       * <code>optional bool swirling = 3;</code>
       */
      public Builder setSwirling(boolean value) {
        
        swirling_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool swirling = 3;</code>
       */
      public Builder clearSwirling() {
        
        swirling_ = false;
        onChanged();
        return this;
      }

      private boolean clockwise_ ;
      /**
       * <code>optional bool clockwise = 4;</code>
       */
      public boolean getClockwise() {
        return clockwise_;
      }
      /**
       * <code>optional bool clockwise = 4;</code>
       */
      public Builder setClockwise(boolean value) {
        
        clockwise_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool clockwise = 4;</code>
       */
      public Builder clearClockwise() {
        
        clockwise_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:net.badata.protobuf.converter.proto.Coffee)
    }

    // @@protoc_insertion_point(class_scope:net.badata.protobuf.converter.proto.Coffee)
    private static final net.badata.protobuf.converter.proto.LiquidProto.Coffee DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.badata.protobuf.converter.proto.LiquidProto.Coffee();
    }

    public static net.badata.protobuf.converter.proto.LiquidProto.Coffee getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Coffee>
        PARSER = new com.google.protobuf.AbstractParser<Coffee>() {
      public Coffee parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Coffee(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Coffee> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Coffee> getParserForType() {
      return PARSER;
    }

    public net.badata.protobuf.converter.proto.LiquidProto.Coffee getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_net_badata_protobuf_converter_proto_Coffee_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_net_badata_protobuf_converter_proto_Coffee_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*converter_includesubclassfields_test.p" +
      "roto\022#net.badata.protobuf.converter.prot" +
      "o\"T\n\006Coffee\022\020\n\010mlVolume\030\001 \001(\005\022\023\n\013tempera" +
      "ture\030\002 \001(\002\022\020\n\010swirling\030\003 \001(\010\022\021\n\tclockwis" +
      "e\030\004 \001(\010B2\n#net.badata.protobuf.converter" +
      ".protoB\013LiquidProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_net_badata_protobuf_converter_proto_Coffee_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_net_badata_protobuf_converter_proto_Coffee_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_net_badata_protobuf_converter_proto_Coffee_descriptor,
        new java.lang.String[] { "MlVolume", "Temperature", "Swirling", "Clockwise", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
